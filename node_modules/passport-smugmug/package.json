{
  "name": "passport-smugmug",
  "version": "0.1.2",
  "description": "SmugMug authentication strategy for Passport.",
  "keywords": [
    "passport",
    "smugmug",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jaredhanson/passport-smugmug.git"
  },
  "bugs": {
    "url": "http://github.com/jaredhanson/passport-smugmug/issues"
  },
  "author": {
    "name": "Jared Hanson",
    "email": "jaredhanson@gmail.com",
    "url": "http://www.jaredhanson.net/"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/passport-smugmug",
  "dependencies": {
    "pkginfo": "0.2.x",
    "passport-oauth": "0.1.x"
  },
  "devDependencies": {
    "vows": "0.6.x"
  },
  "scripts": {
    "test": "NODE_PATH=lib node_modules/.bin/vows test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# Passport-SmugMug\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [SmugMug](http://www.smugmug.com/) using the OAuth 1.0a API.\n\nThis module lets you authenticate using Dwolla in your Node.js applications.\nBy plugging into Passport, SmugMug authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-smugmug\n\n## Usage\n\n#### Configure Strategy\n\nThe SmugMug authentication strategy authenticates users using a SmugMug account\nand OAuth tokens.  The strategy requires a `verify` callback, which accepts\nthese credentials and calls `done` providing a user, as well as `options`\nspecifying a consumer key, consumer secret, and callback URL.\n\n    passport.use(new SmugMugStrategy({\n        consumerKey: SMUGMUG_KEY,\n        consumerSecret: SMUGMUG_SECRET,\n        callbackURL: \"http://127.0.0.1:3000/auth/smugmug/callback\"\n      },\n      function(token, tokenSecret, profile, done) {\n        User.findOrCreate({ smugmugId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'smugmug'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/auth/smugmug',\n      passport.authenticate('smugmug'));\n    \n    app.get('/auth/smugmug/callback', \n      passport.authenticate('smugmug', { failureRedirect: '/login' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect('/');\n      });\n\n## Examples\n\nFor a complete, working example, refer to the [login example](https://github.com/jaredhanson/passport-smugmug/tree/master/examples/login).\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n[![Build Status](https://secure.travis-ci.org/jaredhanson/passport-smugmug.png)](http://travis-ci.org/jaredhanson/passport-smugmug)\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jaredhanson/passport-smugmug",
  "_id": "passport-smugmug@0.1.2",
  "_from": "passport-smugmug@"
}
